<?php# Модель авторизации администратораinclude_once dirname(__FILE__) . '/M_DB.inc.php';$mDB = M_DB::Instance();class M_Admin{		private static $instance;	# экземпляр класса	# Получение единственного экземпляра класса	public static function Instance()	{		if (self::$instance == null)			self::$instance = new M_Admin();					return self::$instance;	}	/**	* Функция авторизации	*	* @return boolean	*/	public function CheckLogin()	{        global $config;		$login_successful = false;				$logout = (isset($_SESSION['logout'])) ? $_SESSION['logout'] : false;				# Вариант для CGI		if (isset($_GET['http_autorization']))			list($_SERVER['PHP_AUTH_USER'], $_SERVER['PHP_AUTH_PW']) = explode(':' , base64_decode(substr($_GET['http_autorization'], 6)));		# Проверка логина и пароля		if (isset($_SERVER['PHP_AUTH_USER']) && isset($_SERVER['PHP_AUTH_PW']))		{			if ($_SERVER['PHP_AUTH_USER'] == $config['admin']['login'] && md5($_SERVER['PHP_AUTH_PW']) == $config['admin']['password'] && $logout != true)			{				$_SESSION['access_type'] = 'admin';				$login_successful = true;			}			elseif ($config['manager']['enabled'] !== true && $_SERVER['PHP_AUTH_USER'] == $config['manager']['login'] && md5($_SERVER['PHP_AUTH_PW']) == $config['manager']['password'] && $logout != true)			{				$_SESSION['access_type'] = 'manager';				$login_successful = true;			}			elseif ($config['manager']['enabled'] === true)			{				include_once dirname(__FILE__) . '/M_DB.inc.php';				$this->mDB = M_DB::Instance();				$params = array ('email =', 'password =');				$values = array ('\'' . $_SERVER['PHP_AUTH_USER'] . '\'', '\'' . $_SERVER['PHP_AUTH_PW'] . '\'');				$search_type = array ('AND');								$result = $this->mDB->SearchItemsByParamArray('manager', $params, $values, $search_type);							if ($result && !$logout)				{					$_SESSION['access_type'] = 'manager';					$_SESSION['id_manager'] = $result[0]['id_manager'];					$login_successful = true;				}			}		}		# Если юзер не залогинен		if (!$login_successful)		{			# Форма авторизации			header('WWW-Authenticate: Basic realm="Enter login and password"');			header('HTTP/1.0 401 Unauthorized');		}		else		{			return true;		}	}}